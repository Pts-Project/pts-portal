[{"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\index.js":"1","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\reportWebVitals.js":"2","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\App.js":"3","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Navbar.js":"4","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Events.js":"5","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Home.js":"6","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\ResetPassword.js":"7","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\Signup.js":"8","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\Login.js":"9","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\404\\FourOFour.js":"10","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\AdminSignup.js":"11","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\NewPassword.js":"12","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\admin\\userProfile.js":"13","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\AdminLogin.js":"14","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\adminpanel\\AddEvent.js":"15","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\admin\\adminProfile.js":"16","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\adminpanel\\addUser\\AddUser.js":"17","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\about.js":"18","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\signlinks\\signedinlinks.js":"19","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\signlinks\\signedoutlinks.js":"20","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\achive.js":"21","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Footer.js":"22","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Departments.js":"23","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\bottomContent\\bottomContent.js":"24","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\admin\\Add.js":"25","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\reducers\\userReducer.js":"26"},{"size":517,"mtime":1616664924014,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1616664924038,"results":"29","hashOfConfig":"28"},{"size":6819,"mtime":1617985706046,"results":"30","hashOfConfig":"28"},{"size":2308,"mtime":1617964099709,"results":"31","hashOfConfig":"28"},{"size":2853,"mtime":1618074923229,"results":"32","hashOfConfig":"28"},{"size":7001,"mtime":1617560261728,"results":"33","hashOfConfig":"28"},{"size":2989,"mtime":1616664923995,"results":"34","hashOfConfig":"28"},{"size":6399,"mtime":1616664923995,"results":"35","hashOfConfig":"28"},{"size":4957,"mtime":1618076277515,"results":"36","hashOfConfig":"28"},{"size":260,"mtime":1617552443562,"results":"37","hashOfConfig":"28"},{"size":6428,"mtime":1616664923994,"results":"38","hashOfConfig":"28"},{"size":4086,"mtime":1618075222238,"results":"39","hashOfConfig":"28"},{"size":8538,"mtime":1618149908665,"results":"40","hashOfConfig":"28"},{"size":5270,"mtime":1617620998982,"results":"41","hashOfConfig":"28"},{"size":3190,"mtime":1618075393371,"results":"42","hashOfConfig":"28"},{"size":10640,"mtime":1618147160970,"results":"43","hashOfConfig":"28"},{"size":4765,"mtime":1618149455278,"results":"44","hashOfConfig":"28"},{"size":1995,"mtime":1617960439907,"results":"45","hashOfConfig":"28"},{"size":740,"mtime":1618075089684,"results":"46","hashOfConfig":"28"},{"size":1214,"mtime":1618150127443,"results":"47","hashOfConfig":"28"},{"size":1323,"mtime":1616664923993,"results":"48","hashOfConfig":"28"},{"size":3165,"mtime":1617619854239,"results":"49","hashOfConfig":"28"},{"size":2968,"mtime":1616664923990,"results":"50","hashOfConfig":"28"},{"size":1408,"mtime":1618075032407,"results":"51","hashOfConfig":"28"},{"size":2209,"mtime":1617981213619,"results":"52","hashOfConfig":"28"},{"size":297,"mtime":1617460917517,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"a54in5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\index.js",[],["118","119"],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\reportWebVitals.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\App.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Navbar.js",["120","121"],"import { Component } from \"react\"\r\nimport React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon, SideNav } from 'react-materialize';\r\nimport './navbar.css'\r\nimport Logo from '../assets/ptslogo.png'\r\nimport SignedInLinks from './signlinks/signedinlinks'\r\nimport SignedOutLinks from './signlinks/signedoutlinks'\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            links: '',\r\n            status: 'top'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.listener = document.addEventListener(\"scroll\", e => {\r\n            var scrolled = document.scrollingElement.scrollTop;\r\n            if (scrolled >= 290) {\r\n                if (this.state.status !== \"boottm\") {\r\n                    this.setState({ status: \"bottom\" });\r\n                }\r\n            } else {\r\n                if (this.state.status !== \"top\") {\r\n                    this.setState({ status: \"top\" });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        document.removeEventListener(\"scroll\", this.listener);\r\n    }\r\n\r\n    render() {\r\n        const val = localStorage.getItem(\"test\")\r\n        if (val === 'a') {\r\n            var links = <SignedOutLinks></SignedOutLinks>\r\n        } else {\r\n\r\n            var links = <SignedInLinks></SignedInLinks>\r\n\r\n        }\r\n        return (\r\n            <div className=\"navbar-fixed\">\r\n                <nav class=\"transparent z-depth-0\">\r\n                    <div className=\"nav-wrapper\" style={{ backgroundColor: this.state.status === \"top\" ? \"rgba(10, 10, 10, 0.900)\" : \"black\" }}>\r\n                        <Link to=\"/\"><div className=\"logo left\"><img className=\"logoimg\" src={Logo} width=\"64px\" alt=\"Platform Tech Solutions\"></img></div></Link>\r\n                        <span className=\"sidenav-trigger hide-on-large-only right\" data-target=\"slide-out\"><Icon>menu</Icon></span>\r\n                        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                            {links}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <ul className=\"sidenav black\" id=\"slide-out\">\r\n                    {links}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Navbar;","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Events.js",["122"],"import './events.css'\r\nimport React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport axios from 'axios';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport noevents from '../assets/noevents.gif'\r\n\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataisLoaded: false,\r\n            photos: [],\r\n            images: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.dataisLoaded === false)\r\n            this.fetchImages();\r\n    }\r\n    fetchImages = async () => {\r\n        //await axios.get('/events')\r\n        axios.get('/events')\r\n            .then(res => {\r\n                //localStorage.setItem(\"test\", \"a\")\r\n                this.setState({ photos: res.data });\r\n                console.log(\"fetched data\");\r\n\r\n                let images = []\r\n                this.state.photos.list.map(photo =>\r\n                    images.push(photo)\r\n                )\r\n                this.setState({\r\n                    images,\r\n                    dataisLoaded: true,\r\n                })\r\n            })\r\n            .catch(() => {\r\n                console.log('no data')\r\n                let images = [\r\n                    {\r\n                        \"indexnumber\": \"1\",\r\n                        \"_id\": \"606af2577acb160b40638fff\",\r\n                        \"name\": \"No Event Sheduled\",\r\n                        \"image\": noevents,\r\n                        \"__v\": 0\r\n                    }\r\n                ];\r\n                this.setState({\r\n                    images,\r\n                    dataisLoaded: true,\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"events\">\r\n                <div className=\"eventContent\">\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col md={12}><p className=\"rowTitle\"><h4>Events</h4></p></Col><br></br><br></br><br></br><br></br><br></br>\r\n                        </Row>\r\n                        <Carousel className=\"carousel\">\r\n                            {this.state.images.map((photo, _id) =>\r\n                                <div key={_id}>\r\n\r\n                                    <img className=\"d-block w-100\" src={photo.image} fluid alt={photo.name}\r\n                                    />\r\n                                    <h3 className=\"legend\">{photo.name}</h3>\r\n\r\n                                </div>\r\n                            )\r\n                            }\r\n                        </Carousel>\r\n                    </Container>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Events;","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Home.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\ResetPassword.js",["123","124","125"],"import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport reset from '../../assets/reset1.jpeg'\r\nimport { Container, Row, Col } from 'react-grid-system'\r\nimport './auth.css'\r\n\r\nconst ResetPassword = () => {\r\n  const history = useHistory()\r\n  const [email, setEmail] = useState(\"\")\r\n  const PostData = () => {\r\n\r\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n      M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\r\n      return\r\n    }\r\n    fetch(\"/changePassword\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        email\r\n      })\r\n    }).then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n        }\r\n        else {\r\n          M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n          history.push('/login')\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n  return (\r\n    <div className=\"mycard\">\r\n      <div className=\"card auth-card \" style={{ backgroundImage: `url(${reset})`, minWidth: \"100%\", minHeight: \"100%\", backgroundPosition: \"centre\", backgroundSize: \"cover\" }}>\r\n        <Row>\r\n          <Col>\r\n            <h6 style={{ letterSpacing: \"2px\" }}>RESET PASSWORD</h6><br />\r\n            <h4 style={{ letterSpacing: \"2px\" }}><bold>PLATFORM</bold></h4>\r\n          </Col>\r\n        </Row>\r\n        <Container fluid style={{width:\"400px\"}}>\r\n          <Row>\r\n            <Col>\r\n              <div class=\"input-field col s12\" style={{ marginTop: \"15%\" }}>\r\n                <input id=\"email\" type=\"email\" class=\"validate\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <label for=\"email\" style={{ textAlign: \"center\", color: \"black\" }}>YOUR EMAIL</label>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <button id=\"btn1\" style={{ width: \"200px\", borderRadius: \"50px\", marginTop: \"100px\", marginBottom: \"30px\", letterSpacing: \"2px\" }} className=\"btn waves-effect #212121 grey darken-4\" name=\"action\" type=\"submit\"\r\n                onClick={() => PostData()}\r\n              >\r\n                <strong>  RESET PASSWORD</strong>\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <p>Don't have an account?</p>\r\n\r\n              <Link to=\"/signup\"> <p style={{ color: \"#6CD4CA\" }}><strong>Sign Up Now</strong></p></Link>\r\n\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <br /><br /><br /><br /><br /><br /><br /><br />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\Signup.js",["126"],"import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport sin from '../../assets/sin.jpg'\r\nimport { Container, Row, Col } from 'react-grid-system'\r\nimport './auth.css'\r\n\r\n\r\nconst Signup = () => {\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [mobile, setMobile] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if (password !== confirmPassword) {\r\n            M.toast({ html: \"Passwords do not match\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/user/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password,\r\n                confirmPassword,\r\n                mobile\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                } else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n                    history.push('/login')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card \" style={{ backgroundImage: `url(${sin})`, minWidth: \"100%\", minHeight: \"100%\", backgroundPosition: \"centre\", backgroundSize: \"cover\" }}>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <h6 style={{ letterSpacing: \"2px\" }}>ADMIN SIGNUP</h6><br />\r\n                        <h4 style={{ letterSpacing: \"2px\" }}><bold>PLATFORM</bold></h4>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Container fluid style={{ width: \"400px\" }}>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"10%\" }}>\r\n                                <input id=\"text\" type=\"text\" class=\"validate\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                                <label for=\"text\" style={{ textAlign: \"center\", color: \"black\" }}>NAME</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                <input id=\"email\" type=\"email\" class=\"validate\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <label for=\"email\" style={{ textAlign: \"center\", color: \"black\" }}>EMAIL</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>PASSWORD</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\">\r\n                                <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                />\r\n                                <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>CONFIRM PASSWORD</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                <input id=\"text\" type=\"text\" class=\"validate\"\r\n                                    value={mobile}\r\n                                    onChange={(e) => setMobile(e.target.value)}\r\n                                />\r\n                                <label for=\"text\" style={{ textAlign: \"center\", color: \"black\" }}>PHONE</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <button id=\"btn1\" style={{ width: \"150px\", borderRadius: \"50px\", marginTop: \"70px\", marginBottom: \"30px\", letterSpacing: \"2px\" }} className=\"btn waves-effect #212121 grey darken-4\" name=\"action\" type=\"submit\"\r\n                                onClick={() => PostData()}\r\n                            >\r\n                                <strong>  SIGN UP</strong>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <p>By creating an account, you agree to our </p>\r\n\r\n                            <Link to=\"/signup\"> <p style={{ color: \"#6CD4CA\" }}><strong>Terms and Conditions</strong></p></Link>\r\n                            <p>and</p>\r\n                            <Link to=\"/signup\"> <p style={{ color: \"#6CD4CA\" }}><strong>Privacy Policy</strong></p></Link>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <br /><br /><br /><br /><br /><br /><br /><br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup",["127","128"],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\Login.js",["129","130","131"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport sin from '../../assets/sin.jpg'\r\nimport { Container, Row, Col } from 'react-grid-system'\r\nimport './auth.css'\r\n\r\n//o3EumnIMceQfPiwQ\r\n//mongodb+srv://Platform:<password>@cluster0.lsibt.mongodb.net/<dbname>?retryWrites=true&w=majority\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/user/login\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                } else {\r\n                    localStorage.setItem(\"test\", \"a\")\r\n                    localStorage.setItem(\"jwt\", data.token)\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n\r\n                    localStorage.setItem(\"admincheck\", \"no\");\r\n                    M.toast({ html: \"Login Success\", classes: \"#43a047 green darken-1\" })\r\n                    window.location.reload();\r\n                    window.location = ('/')\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card \" style={{ backgroundImage: `url(${sin})`, minWidth: \"100%\", minHeight: \"100%\", backgroundPosition: \"centre\", backgroundSize: \"cover\" }}>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <h6 style={{ letterSpacing: \"2px\" }}>LOGIN</h6><br />\r\n                        <h4 style={{ letterSpacing: \"2px\" }}><bold>PLATFORM</bold></h4>\r\n                    </Col>\r\n                </Row>\r\n                <Container fluid style={{ width: \"400px\" }}>\r\n                    <Row>\r\n                        <Col>\r\n\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"8%\" }}>\r\n                                <input id=\"email\" type=\"email\" class=\"validate\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <label for=\"email\" style={{ textAlign: \"center\", color: \"black\" }}>EMAIL</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>PASSWORD</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <button id=\"btn1\" style={{ width: \"150px\", borderRadius: \"50px\", marginTop: \"60px\", marginBottom: \"30px\", letterSpacing: \"2px\" }} className=\"btn waves-effect #212121 grey darken-4\" name=\"action\" type=\"submit\"\r\n                                onClick={() => PostData()}\r\n                            >\r\n                                <strong>LOGIN</strong>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <p style={{ color: \"grey\" }}>Forgot Password ?<br />\r\n                                <Link to=\"/changePassword\"> <strong>Reset Your Password</strong></Link></p>\r\n                            <br />\r\n                            <p style={{ color: \"grey\" }}>Dont have an account ?<br />\r\n                                <u><a href=\"mailto:platformtech44@gmail.com\">Contact your Adminstrator</a></u></p>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <br /><br /><br /><br /><br /><br /><br /><br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\404\\FourOFour.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\AdminSignup.js",["132"],"import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport sin from '../../assets/sin.jpg'\r\nimport { Container, Row, Col } from 'react-grid-system'\r\nimport './auth.css'\r\n\r\n\r\nconst AdminSignup = () => {\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [mobile, setMobile] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if (password !== confirmPassword) {\r\n            M.toast({ html: \"Passwords do not match\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/admin/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password,\r\n                confirmPassword,\r\n                mobile\r\n                \r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                } else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n                    history.push('/login')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card \" style={{ backgroundImage: `url(${sin})`, minWidth: \"100%\", minHeight: \"100%\", backgroundPosition: \"centre\", backgroundSize: \"cover\" }}>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <h6 style={{ letterSpacing: \"2px\" }}>ADMIN SIGNUP</h6><br />\r\n                        <h4 style={{ letterSpacing: \"2px\" }}><bold>PLATFORM</bold></h4>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Container fluid style={{ width: \"400px\" }}>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"10%\" }}>\r\n                                <input id=\"text\" type=\"text\" class=\"validate\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                                <label for=\"text\" style={{ textAlign: \"center\", color: \"black\" }}>NAME</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                <input id=\"email\" type=\"email\" class=\"validate\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <label for=\"email\" style={{ textAlign: \"center\", color: \"black\" }}>EMAIL</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>PASSWORD</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\">\r\n                                <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                />\r\n                                <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>CONFIRM PASSWORD</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                <input id=\"text\" type=\"text\" class=\"validate\"\r\n                                    value={mobile}\r\n                                    onChange={(e) => setMobile(e.target.value)}\r\n                                />\r\n                                <label for=\"text\" style={{ textAlign: \"center\", color: \"black\" }}>PHONE</label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <button id=\"btn1\" style={{ width: \"150px\", borderRadius: \"50px\", marginTop: \"70px\", marginBottom: \"30px\", letterSpacing: \"2px\" }} className=\"btn waves-effect #212121 grey darken-4\" name=\"action\" type=\"submit\"\r\n                                onClick={() => PostData()}\r\n                            >\r\n                                <strong>  SIGN UP</strong>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <p>By creating an account, you agree to our </p>\r\n\r\n                            <Link to=\"/signup\"> <p style={{ color: \"#6CD4CA\" }}><strong>Terms and Conditions</strong></p></Link>\r\n                            <p>and</p>\r\n                            <Link to=\"/signup\"> <p style={{ color: \"#6CD4CA\" }}><strong>Privacy Policy</strong></p></Link>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <br /><br /><br /><br /><br /><br /><br /><br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminSignup","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\NewPassword.js",["133","134"],"import React, { useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport reset1 from '../../assets/reset1.jpeg'\r\nimport { Container, Row, Col } from 'react-grid-system'\r\nimport './auth.css'\r\n\r\nconst NewPassword = () => {\r\n    const history = useHistory()\r\n    const [isError, setIsError] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const { token } = useParams()\r\n    console.log(token)\r\n\r\n    const PostData = () => {\r\n        if (password !== confirmPassword) {\r\n            M.toast({ html: \"Passwords do not match\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/new-password\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                confirmPassword,\r\n                token\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n                    history.push('/login')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card \" style={{ backgroundImage: `url(${reset1})`, minWidth: \"100%\", minHeight: \"100%\", backgroundPosition: \"centre\", backgroundSize: \"cover\" }}>\r\n                <Row>\r\n                    <Col>\r\n                        <h6 style={{ letterSpacing: \"2px\" }}>NEW PASSWORD</h6><br />\r\n                        <h4 style={{ letterSpacing: \"2px\" }}><bold>PLATFORM</bold></h4>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Container fluid style={{ width: \"400px\" }}>\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\" style={{ marginTop: \"90px\" }}>\r\n                                <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>NEW PASSWORD</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <div class=\"input-field col s12\">\r\n                                <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                />\r\n                                <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>CONFIRM NEW PASSWORD</label>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <button id=\"btn1\" style={{ width: \"200px\", borderRadius: \"50px\", marginTop: \"100px\", marginBottom: \"30px\", letterSpacing: \"2px\" }} className=\"btn waves-effect #212121 grey darken-4\"\r\n                                onClick={() => PostData()}\r\n                            >\r\n                                <strong>  CHANGE PASSWORD</strong>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n\r\n                <br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NewPassword","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\admin\\userProfile.js",["135","136"],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\auth\\AdminLogin.js",["137","138","139"],"import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport sin from '../../assets/sin.jpg'\r\nimport { Container, Row, Col } from 'react-grid-system'\r\nimport './auth.css'\r\n\r\n//o3EumnIMceQfPiwQ\r\n//mongodb+srv://Platform:<password>@cluster0.lsibt.mongodb.net/<dbname>?retryWrites=true&w=majority\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/admin/login\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                } else {\r\n                    localStorage.setItem(\"jwt\", data.token)\r\n                    localStorage.setItem(\"test\", \"a\")\r\n                    localStorage.setItem(\"admincheck\", \"yes\");\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n                    M.toast({ html: \"Login Success\", classes: \"#43a047 green darken-1\" })\r\n\r\n                    history.push('/')\r\n                    window.location.reload();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    if (localStorage.getItem(\"admincheck\") === \"no\") {\r\n        return (\r\n            <div className=\"mycard\">\r\n                <div className=\"card auth-card \" style={{ backgroundImage: `url(${sin})`, minWidth: \"100%\", minHeight: \"100%\", backgroundPosition: \"centre\", backgroundSize: \"cover\" }}>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <h6 style={{ letterSpacing: \"2px\" }}> ADMIN LOGIN</h6><br />\r\n                            <h4 style={{ letterSpacing: \"2px\" }}><bold>PLATFORM</bold></h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Container fluid style={{ width: \"400px\" }}>\r\n                        <Row>\r\n                            <Col>\r\n\r\n                                <div class=\"input-field col s12\" style={{ marginTop: \"8%\" }}>\r\n                                    <input id=\"email\" type=\"email\" class=\"validate\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                    <label for=\"email\" style={{ textAlign: \"center\", color: \"black\" }}>EMAIL</label>\r\n\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div class=\"input-field col s12\" style={{ marginTop: \"5%\" }}>\r\n                                    <input id=\"password\" type=\"password\" class=\"validate\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                    <label for=\"password\" style={{ textAlign: \"center\", color: \"black\" }}>PASSWORD</label>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <button id=\"btn1\" style={{ width: \"150px\", borderRadius: \"50px\", marginTop: \"60px\", marginBottom: \"30px\", letterSpacing: \"2px\" }} className=\"btn waves-effect #212121 grey darken-4\" name=\"action\" type=\"submit\"\r\n                                    onClick={() => PostData()}\r\n                                >\r\n                                    <strong>LOGIN</strong>\r\n                                </button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>Forgot Password ?</p>\r\n\r\n                                <Link to=\"/changePassword\"> <p style={{ color: \"#6CD4CA\" }}><strong>Reset Your Password</strong></p></Link>\r\n                                <br /> <p>Dont have an account ?</p>\r\n                                <Link to=\"/signup\"> <p style={{ color: \"#6CD4CA\" }}><strong>Sign Up Now</strong></p></Link>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <br /><br /><br /><br /><br /><br /><br /><br />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        window.location = (\"/admin/panel\")\r\n    }\r\n}\r\n\r\nexport default AdminLogin","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\adminpanel\\AddEvent.js",["140","141"],"import React, { Component, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport './AddEvent.css'\r\nimport axios from 'axios'\r\n\r\nfunction AddEvent() {\r\n    const history = useHistory()\r\n    const [SelImage, setSelImage] = useState(\"\");\r\n    const [ImgName, setImgName] = useState(\"\");\r\n\r\n    const uploadImage = (files) => {\r\n\r\n        const formdata = new FormData()\r\n        formdata.append('file', SelImage);\r\n        formdata.append('upload_preset', 'platform')\r\n        formdata.append(\"folder\", \"events\")\r\n        axios.post('https://api.cloudinary.com/v1_1/djxi7xjop/image/upload', formdata)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                console.log(res.data.secure_url)\r\n                const url = res.data.secure_url\r\n                console.log(ImgName)\r\n                const cloudata = {\r\n                    image: url,\r\n                    name: ImgName\r\n                }\r\n                axios.post('/event/create', cloudata, {\r\n                    headers: {\r\n                        'Authorization': \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                    }\r\n                }).then(data => {\r\n\r\n                    console.log(data)\r\n                    M.toast({ html: \"Sucess\", classes: \"#43a047 green darken-1\" })\r\n                    // window.location=('/admin/panel')\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n    if (localStorage.getItem(\"admincheck\") === \"yes\") {\r\n        return (\r\n            <div>\r\n                <section className=\"notlogin\">\r\n                    <div className=\"lContainer\">\r\n                        <div class=\"heading\">\r\n                            Add Event\r\n                </div>\r\n                        <label>\r\n                            Event Name\r\n                </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={ImgName}\r\n                            required\r\n                            onChange={(e) => { setImgName(e.target.value) }}\r\n                        />\r\n                        <div className=\"pass\">\r\n                            <label>\r\n                                Upload Image from Device\r\n                    </label>\r\n                            <input\r\n                                type=\"file\"\r\n                                autoFocus\r\n                                required\r\n\r\n                                onChange={(e) => { setSelImage(e.target.files[0]) }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"lbtnContainer\">\r\n                            <button className=\"lbtn\" onClick={uploadImage} >Add</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"sorry\">\r\n                <h1>Sorry you are not authorized</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEvent;","D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\admin\\adminProfile.js",["142","143","144"],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\adminpanel\\addUser\\AddUser.js",["145"],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\about.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\signlinks\\signedinlinks.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\signlinks\\signedoutlinks.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\achive.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Footer.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\dashboard\\Departments.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\bottomContent\\bottomContent.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\components\\admin\\Add.js",[],"D:\\PTS\\project platform\\PTSProjectgithub\\uiclone\\ui\\src\\reducers\\userReducer.js",["146","147","148"],"import { FloatingActionButton } from \"materialize-css\"\r\n\r\nexport const initialState = null\r\n\r\nexport const reducer = (state, action) => {\r\n    if (action.type == \"USER\") {\r\n        return action.payload\r\n    }\r\n    if (action.type == \"CLEAR\") {\r\n        return null\r\n    }\r\n    return state\r\n}\r\n\r\n",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":4,"column":16,"nodeType":"155","messageId":"156","endLine":4,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":42,"column":17,"nodeType":"155","messageId":"159","endLine":42,"endColumn":22},{"ruleId":"153","severity":1,"message":"160","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":16},{"ruleId":"153","severity":1,"message":"161","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":13,"column":20,"nodeType":"164","messageId":"165","endLine":13,"endColumn":21,"suggestions":"166"},{"ruleId":"162","severity":1,"message":"163","line":13,"column":45,"nodeType":"164","messageId":"165","endLine":13,"endColumn":46,"suggestions":"167"},{"ruleId":"153","severity":1,"message":"161","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":37},{"ruleId":"149","replacedBy":"168"},{"ruleId":"151","replacedBy":"169"},{"ruleId":"153","severity":1,"message":"170","line":12,"column":11,"nodeType":"155","messageId":"156","endLine":12,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":17,"column":24,"nodeType":"164","messageId":"165","endLine":17,"endColumn":25,"suggestions":"171"},{"ruleId":"162","severity":1,"message":"163","line":17,"column":49,"nodeType":"164","messageId":"165","endLine":17,"endColumn":50,"suggestions":"172"},{"ruleId":"153","severity":1,"message":"161","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":37},{"ruleId":"153","severity":1,"message":"173","line":10,"column":12,"nodeType":"155","messageId":"156","endLine":10,"endColumn":19},{"ruleId":"153","severity":1,"message":"174","line":10,"column":21,"nodeType":"155","messageId":"156","endLine":10,"endColumn":31},{"ruleId":"153","severity":1,"message":"175","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":11},{"ruleId":"176","severity":1,"message":"177","line":28,"column":37,"nodeType":"178","endLine":28,"endColumn":97},{"ruleId":"153","severity":1,"message":"161","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":18,"column":24,"nodeType":"164","messageId":"165","endLine":18,"endColumn":25,"suggestions":"179"},{"ruleId":"162","severity":1,"message":"163","line":18,"column":49,"nodeType":"164","messageId":"165","endLine":18,"endColumn":50,"suggestions":"180"},{"ruleId":"153","severity":1,"message":"181","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"170","line":8,"column":11,"nodeType":"155","messageId":"156","endLine":8,"endColumn":18},{"ruleId":"153","severity":1,"message":"175","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":9},{"ruleId":"153","severity":1,"message":"182","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":11},{"ruleId":"176","severity":1,"message":"177","line":32,"column":37,"nodeType":"178","endLine":32,"endColumn":97},{"ruleId":"153","severity":1,"message":"181","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"183","line":1,"column":10,"nodeType":"155","messageId":"156","endLine":1,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":6,"column":21,"nodeType":"186","messageId":"187","endLine":6,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":9,"column":21,"nodeType":"186","messageId":"187","endLine":9,"endColumn":23},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'SideNav' is defined but never used.","Identifier","unusedVar","no-redeclare","'links' is already defined.","redeclared","'ReactDOM' is defined but never used.","'useContext' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["190","191"],["192","193"],["188"],["189"],"'history' is assigned a value but never used.",["194","195"],["196","197"],"'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'M' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["198","199"],["200","201"],"'Component' is defined but never used.","'Add' is defined but never used.","'FloatingActionButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"202","fix":"203","desc":"204"},{"messageId":"205","fix":"206","desc":"207"},{"messageId":"202","fix":"208","desc":"204"},{"messageId":"205","fix":"209","desc":"207"},{"messageId":"202","fix":"210","desc":"204"},{"messageId":"205","fix":"211","desc":"207"},{"messageId":"202","fix":"212","desc":"204"},{"messageId":"205","fix":"213","desc":"207"},{"messageId":"202","fix":"214","desc":"204"},{"messageId":"205","fix":"215","desc":"207"},{"messageId":"202","fix":"216","desc":"204"},{"messageId":"205","fix":"217","desc":"207"},"removeEscape",{"range":"218","text":"219"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"220","text":"221"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"222","text":"219"},{"range":"223","text":"221"},{"range":"224","text":"219"},{"range":"225","text":"221"},{"range":"226","text":"219"},{"range":"227","text":"221"},{"range":"228","text":"219"},{"range":"229","text":"221"},{"range":"230","text":"219"},{"range":"231","text":"221"},[419,420],"",[419,419],"\\",[444,445],[444,444],[576,577],[576,576],[601,602],[601,601],[595,596],[595,595],[620,621],[620,620]]